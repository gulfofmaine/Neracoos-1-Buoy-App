name: "Push"

on: [push]

jobs:
  build:
    name: Build and cache Docker image
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      
      - name: Cache Docker layers
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/.buildx-cache
          key: mariners-dashboard-buildx-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-buildx-

      - name: Cache Docker image
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/myimage.tar
          key: mariners-dashboard-image-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-image-

      - name: "Login to Docker Hub"
        uses: docker/login-action@v1.10.0
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          target: develop
          push: false
          tags: gmri/neracoos-mariners-dashboard:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/myimage.tar

      - name: Move Docker Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  unit_tests:
    name: Unit tests, typecheck and coverage
    runs-on: ubuntu-20.04
    needs: build
    timeout-minutes: 10

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0
      
      - name: Cache Docker image
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/myimage.tar
          key: mariners-dashboard-image-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-image-

      - name: Load Docker image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Run unit tests and coverage
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        if: env.CODACY_PROJECT_TOKEN != null
        run: docker-compose run -e CI=true -e CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }} client yarn test-with-codacy-coverage
      
      - name: Run unit test (and skip coverage if no project token secret)
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        if: env.CODACY_PROJECT_TOKEN == null
        run: docker-compose run -e CI=true client yarn test


      - name: Typecheck
        run: docker-compose run client yarn types

      - name: Yarn Build
        run: docker-compose run client yarn build

      - name: Build Storybook Pages
        run: docker-compose run client yarn build-storybook

      - name: Cache Storybook Build
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/storybook-public/
          key: mariners-dashboard-storybook-${{ github.sha }}
      
      - name: Copy Storybook Build to cache directory
        run: |
          rm -rf /tmp/storybook-public
          cp -r storybook-public /tmp/storybook-public

  cypress:
    name: Cypress integration tests
    runs-on: ubuntu-20.04
    needs: build
    timeout-minutes: 30

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache Docker image
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/myimage.tar
          key: mariners-dashboard-image-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-image-

      - name: Load Docker image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Get Cypress version from package.json
        run: echo "CYPRESS_VERSION=$(cat package.json | jq -r '.optionalDependencies.cypress')" >> $GITHUB_ENV

      - name: Cache Cypress
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/Cypress
          key: Cypress${CYPRESS_VERSION}

      - name: Install Cypress and wait on
        run: npm install cypress@${CYPRESS_VERSION} wait-on

      - name: Start container
        run: docker-compose run -d -e "REACT_APP_PROXY_ROOT=http://localhost:9090/" -p 3000:3000 client yarn start

      - name: CORS Proxy container
        run: docker run -d -p 9090:9090 -e "ALLOWED=http://localhost:3000" gmri/cors-proxy:latest

      - name: Wait for container to become available
        run: npx wait-on http://localhost:3000
        timeout-minutes: 1

      - name: Run Cypress
        run: npx cypress run --config video=false,retries=1 
        timeout-minutes: 15
      
      - name: Archive test screenshots
        uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Run Cypress and send results to dashboard if the previous run failed
        run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
        timeout-minutes: 15
        if: failure()
      
      - name: Archive test videos
        uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Docker-compose Logs
        run: docker-compose logs
        if: always()
  
  pages:
    name: Deploy Storybook to Github Pages on version tag
    runs-on: ubuntu-20.04
    needs: [unit_tests, cypress]
    timeout-minutes: 10
    if: |
      github.repository == 'gulfofmaine/Neracoos-1-Buoy-App'
      && contains(github.ref, 'refs/tags/v')

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: Cache Storybook Build
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/storybook-public/
          key: mariners-dashboard-storybook-${{ github.sha }}

      - name: Deploy Storybook to Github Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: gh-pages
          folder: /tmp/storybook-public/

  push_image:
    name: Build and push tagged image to Docker Hub
    runs-on: ubuntu-20.04
    needs: [unit_tests, cypress]
    timeout-minutes: 20
    environment: Deploy with ArgoCD
    if: |
      github.repository == 'gulfofmaine/Neracoos-1-Buoy-App'
      && contains(github.ref, 'refs/tags/v')
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      
      - name: Cache Docker layers
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/.buildx-cache
          key: mariners-dashboard-buildx-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-buildx-

      - name: "Login to Docker Hub"
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1
        id: tagName

      - name: Build and push Docker Image
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: true
          tags: gmri/neracoos-mariners-dashboard:${{ steps.tagName.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          build-args: |
           REACT_APP_PROXY_ROOT=https://proxy.neracoos.org/
           REACT_APP_ERDDAP_SERVICE=https://buoybarn.neracoos.org
      
      - name: Make GitOps directory
        run: mkdir gitops

      - name: Clone GitOps config repo
        run: git clone "https://$GITOPS_TOKEN@github.com/gulfofmaine/neracoos-do-cd.git"
        working-directory: ./gitops
        env:
          GITOPS_TOKEN: ${{ secrets.GITOPS_TOKEN }}
        
      - name: Update GitOps config repo
        working-directory: ./gitops/neracoos-do-cd
        run: |
          sed -i 's/?ref=.\+/?ref=${{ steps.tagName.outputs.tag }}/' apps/mariners/kustomization.yaml
          sed -i 's/newTag: .\+/newTag: ${{ steps.tagName.outputs.tag }}/' apps/mariners/kustomization.yaml
          git config --global user.email 'neracoos-mariners-ci@gmri.org'
          git config --global user.name 'NERACOOS Mariners Dashboard CI'
          git diff --exit-code && echo 'Already Deployed' || (git commit -am 'Upgrade Mariners Dashboard to ${{ steps.tagName.outputs.tag }}' && git push)

      - name: Create Sentry Release
        uses: getsentry/action-release@v1.1.6
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ steps.tagName.outputs.tag }}