name: "Push"

on: [push]

jobs:
  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.3.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: mariners-dashboard-buildx-${{ github.sha }}
          restore-keys: |
            mariners-dashboard-buildx-

      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        continue-on-error: true
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: develop
          push: false
          tags: gmri/neracoos-mariners-dashboard:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/myimage.tar

      - name: Move Docker Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: mariners-dashboard-image
          path: /tmp/myimage.tar

  unit_tests:
    name: Unit tests, typecheck and coverage
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.3.4
      
      - name: Download Docker Image artifact
        uses: actions/download-artifact@v2
        with:
          name: mariners-dashboard-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Run unit tests and coverage
        run: docker-compose run -e CI=true -e CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }} client yarn test-with-codacy-coverage

      - name: Typecheck
        run: docker-compose run client yarn types

      - name: Yarn Build
        run: docker-compose run client yarn build

      - name: Build Storybook Pages
        run: docker-compose run client yarn build-storybook

  cypress:
    name: Cypress integration tests
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 30

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.3.4

      - name: Download Docker Image artifact
        uses: actions/download-artifact@v2
        with:
          name: mariners-dashboard-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Get Cypress version from package.json
        run: echo "CYPRESS_VERSION=$(cat package.json | jq -r '.optionalDependencies.cypress')" >> $GITHUB_ENV

      - name: Cache Cypress
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: Cypress${CYPRESS_VERSION}
      
      - name: Start container
        run: docker-compose run -d -e "REACT_APP_PROXY_ROOT=http://localhost:9090/" -p 3000:3000 client yarn start

      - name: Install Cypress and wait on
        run: npm install cypress@${CYPRESS_VERSION} wait-on

      - name: CORS Proxy container
        run: docker run -d -p 9090:9090 -e "ALLOWED=http://localhost:3000" gmri/cors-proxy:latest

      - name: Wait for container to become available
        run: npx wait-on http://localhost:3000
        timeout-minutes: 1

      - name: Run Cypress
        run: npx cypress run --config video=false,retries=1 
        timeout-minutes: 15
      
      - name: Archive test screenshots
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Run Cypress and send results to dashboard if the previous run failed
        run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
        timeout-minutes: 15
        if: failure()
      
      - name: Archive test videos
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Docker-compose Logs
        run: docker-compose logs
        if: always()
  
  pages:
    name: Build and deploy Storybook to Github Pages on main branch
    runs-on: ubuntu-latest
    needs: [unit_tests, cypress]
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && github.repository == ' gulfofmaine/Neracoos-1-Buoy-App'

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2.3.4

      - name: Download Docker Image artifact
        uses: actions/download-artifact@v2
        with:
          name: mariners-dashboard-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a
      
      - name: Build Storybook Pages
        run: docker-compose run client yarn build-storybook

      - name: Deploy Storybook to Github Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.4.8
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: storybook-public
